/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package fr.memebattle.ressources.api;

import fr.memebattle.ressources.modele.api.Vote;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-07-03T23:22:59.648730500-04:00[America/New_York]")
@Validated
@Api(value = "vote", description = "the vote API")
public interface VoteApi {

    /**
     * POST /vote : Voter pour une image
     * Permet à un joueur de voter pour une image dans le jeu
     *
     * @param vote Informations du vote (optional)
     * @return Vote réussi (status code 200)
     *         or Requête invalide (status code 400)
     */
    @ApiOperation(value = "Voter pour une image", nickname = "votePost", notes = "Permet à un joueur de voter pour une image dans le jeu", tags={ "Vote", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Vote réussi"),
        @ApiResponse(code = 400, message = "Requête invalide") })
    @PostMapping(
        value = "/vote"
    )
    ResponseEntity<Void> votePost(@ApiParam(value = "Informations du vote"  )  @Valid @RequestBody(required = false) Vote vote);

}
