/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package fr.memebattle.ressources.api;

import fr.memebattle.ressources.modele.api.Joueur;
import fr.memebattle.ressources.modele.api.RequeteJoueur;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-30T09:12:01.159031200-04:00[America/New_York]")
@Validated
@Api(value = "joueur", description = "the joueur API")
public interface JoueurApi {

    /**
     * POST /joueur : Créer un nouveau joueur
     *
     * @param requeteJoueur Informations du joueur à créer (required)
     * @return Joueur créé avec succès (status code 200)
     */
    @ApiOperation(value = "Créer un nouveau joueur", nickname = "creerJoueur", notes = "", response = Joueur.class, tags={ "Joueur", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Joueur créé avec succès", response = Joueur.class) })
    @PostMapping(
        value = "/joueur",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<Joueur> creerJoueur(@ApiParam(value = "Informations du joueur à créer" ,required=true )  @Valid @RequestBody RequeteJoueur requeteJoueur);

}
