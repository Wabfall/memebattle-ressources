/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package fr.memebattle.ressources.api;

import fr.memebattle.ressources.modele.api.VoteResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-05-30T09:12:00.872093400-04:00[America/New_York]")
@Validated
@Api(value = "votes", description = "the votes API")
public interface VotesApi {

    /**
     * POST /votes : Vote for an image
     * Allows a player to vote for an image in the game
     *
     * @param imageId ID of the image to vote for (required)
     * @param playerId ID of the player casting the vote (required)
     * @return Vote successful (status code 200)
     *         or Invalid request (status code 400)
     *         or Image or player not found (status code 404)
     */
    @ApiOperation(value = "Vote for an image", nickname = "votesPost", notes = "Allows a player to vote for an image in the game", response = VoteResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Vote successful", response = VoteResponse.class),
        @ApiResponse(code = 400, message = "Invalid request"),
        @ApiResponse(code = 404, message = "Image or player not found") })
    @PostMapping(
        value = "/votes",
        produces = { "*/*" }
    )
    ResponseEntity<VoteResponse> votesPost(@NotNull @ApiParam(value = "ID of the image to vote for", required = true) @Valid @RequestParam(value = "imageId", required = true) String imageId,@NotNull @ApiParam(value = "ID of the player casting the vote", required = true) @Valid @RequestParam(value = "playerId", required = true) String playerId);

}
